import { Component, EventEmitter, Output } from '@angular/core';
import { TableModule } from 'primeng/table';
import { ButtonModule } from 'primeng/button';
import { IconField } from 'primeng/iconfield';
import { InputIcon } from 'primeng/inputicon';
import { InputTextModule } from 'primeng/inputtext';
import { SelectModule } from 'primeng/select';
import { ConfirmDialog } from 'primeng/confirmdialog';
import { ToastModule } from 'primeng/toast';
import { ConfirmationService, MessageService } from 'primeng/api';
import { RouterLink } from '@angular/router';
import { Dialog } from 'primeng/dialog';
import { EditUserComponent } from '../edit-user/edit-user.component';
@Component({
  selector: 'app-list-user',
  standalone: true,
  imports: [
    TableModule,
    ButtonModule,
    ConfirmDialog,
    IconField,
    InputIcon,
    InputTextModule,
    SelectModule,
    ToastModule,
    RouterLink,
    Dialog,
    EditUserComponent,
  ],
  templateUrl: './list-user.component.html',
  styleUrl: './list-user.component.scss',
  providers: [ConfirmationService, MessageService],
})
export class ListUserComponent {
  addFormVisible = false;
  @Output() toggleAddForm = new EventEmitter<boolean>();
  users: any[] = [
    {
      role: 'admin',
      fullName: 'John Doe',
      email: 'john.doe@example.com',
      phoneNumber: '1234567890',
      password: 'password123',
      confirmPassword: 'password123',
      enrollmentNumber: null,
      department: null,
      courseClass: null,
      facultyId: null,
      subjectsAssigned: null,
      librarianId: null,
      childEnrollmentNumber: null,
      relationshipToChild: null,
      accountantId: null,
    },
    {
      role: 'faculty',
      fullName: 'Alice Smith',
      email: 'alice.smith@example.com',
      phoneNumber: '2345678901',
      password: 'password123',
      confirmPassword: 'password123',
      enrollmentNumber: null,
      department: 'mathematics',
      courseClass: null,
      facultyId: 'F002',
      subjectsAssigned: ['math', 'science'],
      librarianId: null,
      childEnrollmentNumber: null,
      relationshipToChild: null,
      accountantId: null,
    },
    {
      role: 'student',
      fullName: 'Emily Davis',
      email: 'emily.davis@example.com',
      phoneNumber: '3456789012',
      password: 'password123',
      confirmPassword: 'password123',
      enrollmentNumber: 'ENR003',
      department: 'physics',
      courseClass: 'bsc',
      facultyId: null,
      subjectsAssigned: null,
      librarianId: null,
      childEnrollmentNumber: null,
      relationshipToChild: null,
      accountantId: null,
    },
    {
      role: 'parent',
      fullName: 'Michael Johnson',
      email: 'michael.johnson@example.com',
      phoneNumber: '4567890123',
      password: 'password123',
      confirmPassword: 'password123',
      enrollmentNumber: null,
      department: null,
      courseClass: null,
      facultyId: null,
      subjectsAssigned: null,
      librarianId: null,
      childEnrollmentNumber: 'ENR003',
      relationshipToChild: 'father',
      accountantId: null,
    },
    {
      role: 'librarian',
      fullName: 'Sarah Williams',
      email: 'sarah.williams@example.com',
      phoneNumber: '5678901234',
      password: 'password123',
      confirmPassword: 'password123',
      enrollmentNumber: null,
      department: null,
      courseClass: null,
      facultyId: null,
      subjectsAssigned: null,
      librarianId: 'L001',
      childEnrollmentNumber: null,
      relationshipToChild: null,
      accountantId: null,
    },
    {
      role: 'accountant',
      fullName: 'David Brown',
      email: 'david.brown@example.com',
      phoneNumber: '6789012345',
      password: 'password123',
      confirmPassword: 'password123',
      enrollmentNumber: null,
      department: null,
      courseClass: null,
      facultyId: null,
      subjectsAssigned: null,
      librarianId: null,
      childEnrollmentNumber: null,
      relationshipToChild: null,
      accountantId: 'A001',
    },
    {
      role: 'faculty',
      fullName: 'Chris Taylor',
      email: 'chris.taylor@example.com',
      phoneNumber: '7890123456',
      password: 'password123',
      confirmPassword: 'password123',
      enrollmentNumber: 'ENR004',
      department: 'computer_science',
      courseClass: 'msc',
      facultyId: 'F003',
      subjectsAssigned: ['math', 'science'],
      librarianId: null,
      childEnrollmentNumber: null,
      relationshipToChild: null,
      accountantId: null,
    },
    {
      role: 'student',
      fullName: 'Sophia Wilson',
      email: 'sophia.wilson@example.com',
      phoneNumber: '8901234567',
      password: 'password123',
      confirmPassword: 'password123',
      enrollmentNumber: 'ENR005',
      department: 'biology',
      courseClass: 'phd',
      facultyId: null,
      subjectsAssigned: null,
      librarianId: null,
      childEnrollmentNumber: null,
      relationshipToChild: null,
      accountantId: null,
    },
    {
      role: 'parent',
      fullName: 'Daniel Moore',
      email: 'daniel.moore@example.com',
      phoneNumber: '9012345678',
      password: 'password123',
      confirmPassword: 'password123',
      enrollmentNumber: null,
      department: null,
      courseClass: null,
      facultyId: null,
      subjectsAssigned: null,
      librarianId: null,
      childEnrollmentNumber: 'ENR005',
      relationshipToChild: 'mother',
      accountantId: null,
    },
    {
      role: 'admin',
      fullName: 'Olivia Taylor',
      email: 'olivia.taylor@example.com',
      phoneNumber: '0123456789',
      password: 'password123',
      confirmPassword: 'password123',
      enrollmentNumber: null,
      department: null,
      courseClass: null,
      facultyId: null,
      subjectsAssigned: null,
      librarianId: null,
      childEnrollmentNumber: null,
      relationshipToChild: null,
      accountantId: null,
    },
    {
      role: 'librarian',
      fullName: 'Liam Martin',
      email: 'liam.martin@example.com',
      phoneNumber: '1234567890',
      password: 'password123',
      confirmPassword: 'password123',
      enrollmentNumber: null,
      department: null,
      courseClass: null,
      facultyId: null,
      subjectsAssigned: null,
      librarianId: 'L002',
      childEnrollmentNumber: null,
      relationshipToChild: null,
      accountantId: null,
    },
    {
      role: 'faculty',
      fullName: 'Ethan Anderson',
      email: 'ethan.anderson@example.com',
      phoneNumber: '2345678901',
      password: 'password123',
      confirmPassword: 'password123',
      enrollmentNumber: 'ENR007',
      department: 'physics',
      courseClass: 'msc',
      facultyId: 'F005',
      subjectsAssigned: ['math', 'science'],
      librarianId: null,
      childEnrollmentNumber: null,
      relationshipToChild: null,
      accountantId: null,
    },
    {
      role: 'accountant',
      fullName: 'Mason Jackson',
      email: 'mason.jackson@example.com',
      phoneNumber: '3456789012',
      password: 'password123',
      confirmPassword: 'password123',
      enrollmentNumber: null,
      department: null,
      courseClass: null,
      facultyId: null,
      subjectsAssigned: null,
      librarianId: null,
      childEnrollmentNumber: null,
      relationshipToChild: null,
      accountantId: 'A002',
    },
    {
      role: 'student',
      fullName: 'Isabella Harris',
      email: 'isabella.harris@example.com',
      phoneNumber: '4567890123',
      password: 'password123',
      confirmPassword: 'password123',
      enrollmentNumber: 'ENR008',
      department: 'biology',
      courseClass: 'bsc',
      facultyId: null,
      subjectsAssigned: null,
      librarianId: null,
      childEnrollmentNumber: null,
      relationshipToChild: null,
      accountantId: null,
    },
    {
      role: 'parent',
      fullName: 'Charlotte Clark',
      email: 'charlotte.clark@example.com',
      phoneNumber: '5678901234',
      password: 'password123',
      confirmPassword: 'password123',
      enrollmentNumber: null,
      department: null,
      courseClass: null,
      facultyId: null,
      subjectsAssigned: null,
      librarianId: null,
      childEnrollmentNumber: 'ENR008',
      relationshipToChild: 'guardian',
      accountantId: null,
    },
    {
      role: 'librarian',
      fullName: 'Amelia Lee',
      email: 'amelia.lee@example.com',
      phoneNumber: '6789012345',
      password: 'password123',
      confirmPassword: 'password123',
      enrollmentNumber: null,
      department: null,
      courseClass: null,
      facultyId: null,
      subjectsAssigned: null,
      librarianId: 'L003',
      childEnrollmentNumber: null,
      relationshipToChild: null,
      accountantId: null,
    },
    {
      role: 'faculty',
      fullName: 'Lucas Walker',
      email: 'lucas.walker@example.com',
      phoneNumber: '7890123456',
      password: 'password123',
      confirmPassword: 'password123',
      enrollmentNumber: 'ENR009',
      department: 'computer_science',
      courseClass: 'phd',
      facultyId: 'F006',
      subjectsAssigned: ['history', 'science'],
      librarianId: null,
      childEnrollmentNumber: null,
      relationshipToChild: null,
      accountantId: null,
    },
    {
      role: 'student',
      fullName: 'Avery King',
      email: 'avery.king@example.com',
      phoneNumber: '8901234567',
      password: 'password123',
      confirmPassword: 'password123',
      enrollmentNumber: 'ENR010',
      department: 'mathematics',
      courseClass: 'msc',
      facultyId: null,
      subjectsAssigned: null,
      librarianId: null,
      childEnrollmentNumber: null,
      relationshipToChild: null,
      accountantId: null,
    },
  ];
  selectedUsers: any;
  visible: boolean = false;
  editUserData: any;

  constructor(
    private confirmationService: ConfirmationService,
    private messageService: MessageService
  ) {}

  handleAddForm() {
    this.addFormVisible = !this.addFormVisible;
    this.toggleAddForm.emit(this.addFormVisible);
  }

  confirm2(event: Event) {
    this.confirmationService.confirm({
      target: event.target as EventTarget,
      message: 'Do you want to delete this record?',
      header: 'Confirmation',
      icon: 'pi pi-info-circle',
      rejectLabel: 'Cancel',
      rejectButtonProps: {
        label: 'Cancel',
        severity: 'secondary',
        outlined: true,
      },
      acceptButtonProps: {
        label: 'Delete',
        severity: 'danger',
      },

      accept: () => {
        this.messageService.add({
          severity: 'info',
          summary: 'Confirmed',
          detail: 'Record deleted',
        });
      },
      reject: () => {
        this.messageService.add({
          severity: 'error',
          summary: 'Rejected',
          detail: 'You have rejected',
        });
      },
    });
  }

  editUser(user: any) {
    this.visible = true;
    this.editUserData = user;
  }

  closeDialog() {
    this.visible = false;
  }
}
